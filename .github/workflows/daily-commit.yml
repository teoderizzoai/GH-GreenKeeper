name: Daily Poetic Motivation

on:
  schedule:
    - cron: '0 7 * * *'  # 9 AM Amsterdam time (UTC+2)
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo with write token
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Debug repository state
        run: |
          echo "Current branch: $(git branch --show-current)"
          echo "Git status:"
          git status
          echo "Git log (last 3 commits):"
          git log --oneline -3

      - name: Generate poetic motivation with OpenRouter
        run: |
          RESPONSE=$(curl -s https://openrouter.ai/api/v1/chat/completions \
            -H "Authorization: Bearer ${{ secrets.OPENROUTER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "model": "openchat/openchat-7b:free",
              "messages": [
                {"role": "user", "content": "Write a short, poetic motivational message to inspire someone working alone on a long-term creative or technical project. Keep it under 25 words."}
              ]
            }')
          
          # Debug the API response
          echo "API Response: $RESPONSE"
          
          MESSAGE=$(echo "$RESPONSE" | jq -r '.choices[0].message.content')
          
          # Validate the message
          if [ "$MESSAGE" = "null" ] || [ -z "$MESSAGE" ]; then
            echo "Error: Failed to extract message from API response"
            exit 1
          fi
          
          echo "Generated message: $MESSAGE"
          echo "$(date): $MESSAGE" >> progress.md
          echo "MESSAGE=$MESSAGE" >> $GITHUB_ENV

      - name: Commit and push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Show what will be committed
          echo "Files to be committed:"
          git status --porcelain
          
          # Add the file
          git add progress.md
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            echo "Committing changes..."
            git commit -m "Auto: $MESSAGE"
            
            # Try to push with retry logic
            for i in {1..3}; do
              echo "Attempt $i to push changes..."
              if git push; then
                echo "Push successful"
                break
              else
                echo "Push failed on attempt $i"
                if [ $i -eq 3 ]; then
                  echo "All push attempts failed"
                  exit 1
                fi
                sleep 2
              fi
            done
          fi
